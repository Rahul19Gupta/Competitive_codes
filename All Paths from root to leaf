class Node:

    def __init__(self,data):

        self.data=data
        self.left=None
        self.right=None

path1=[]
length=0
def Print_all_path_from_root_leaf(root,path1,length):


    if(not root):
        return



    if(len(path1)<length):
        path1.append(root.data)
    else:
        path1[length-1]=root.data


    if(not root.left and not root.right):
        print(path1[0:length+1])


    # Kind of preorder traversal

    Print_all_path_from_root_leaf(root.left,path1,length+1)

    Print_all_path_from_root_leaf(root.right,path1,length+1)


Node1=Node(1)
Node2=Node(2)
Node3=Node(3)
Node4=Node(4)
Node5=Node(5)
Node6=Node(6)
Node7=Node(7)

Node1.left=Node2
Node1.right=Node3
Node2.left=Node4
Node2.right=Node5
Node3.left=Node6
Node3.right=Node7

Print_all_path_from_root_leaf(Node1,path1,1)
