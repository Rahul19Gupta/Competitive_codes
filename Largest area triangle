import math
class Solution:
    
    def distance(self,p1,p2):
        
        return(math.sqrt((p1[0]-p2[0])**2 + (p1[1]-p2[1])**2))
    
    def calculate_area(self,p1,p2,p3):
        
        a=self.distance(p1,p2)
        b=self.distance(p1,p3)
        c=self.distance(p2,p3)
        
        s=(a+b+c)/2
        
        area=s*(s-a)*(s-b)*(s-c)
        
        if(area>0):
            
            area=math.sqrt(area)
            
        else:
            
            area=0
            
        return(area)
    
    def largestTriangleArea(self, points: List[List[int]]) -> float:
        
        n=len(points)
        
        Max_area=0
        
        for i in range(0,n):
            
            for j in range(i+1,n):
                
                for k in range(j+1,n):
                    
                    x=self.calculate_area(points[i],points[j],points[k])
                    
                    if(Max_area<x):
                        
                        Max_area=x
        
        return(Max_area)
        
        
        
        
