
def isvalidpart(s):

    if(len(s)>3):
        return(False)

    if(s[0]=='0' and len(s)>1):
        return(False)
    
    val=int(s)
    return(val>=0 and val<=255)


def Restore_the_ip_address(String,result):
    n=len(String)
    for i in range(1,n):

        if(i<4):

            #GENERATE ALL POSSIBLE SUBSTRING OF LENGTH 1 ,2 ,3
            first=String[:i]
            if(isvalidpart(first)):

                for j in range(1,n):

                    if(j<4 and (i+j)<n):

                        second=String[i:i+j]

                        if(isvalidpart(second)):

                            for k in range(1,n):

                                if(k<4 and (i+j+k)<n):

                                    third=String[i+j:i+j+k]
                                    fourth=String[i+j+k:]

                                    if(isvalidpart(third) and isvalidpart(fourth)):

                                        result.append("".join(first+"."+second+"."+third+"."+fourth))


    return(result)


String="0100100"
result=[]
print(Restore_the_ip_address(String,result))

    

    
                
    
