
def Online_Stock_Problem(arr):

    n=len(arr)
    
    #BOTTOM UP DYNAMIC PROGRAMMING APPROACH
    Max_Profit=[0 for i in range(0,n)]

    #BASE CASE
    Max_Profit[0]=1

    if(arr[1]>arr[0]):

        Max_Profit[1]=2

    else:

        Max_Profit[1]=1

    #RECURSIVE CASE
    #import pdb;pdb.set_trace()
    for i in range(2,n):

        j=i-1

        x=0
        
        while(j>=0 and arr[i]>arr[j]):

            print((i,j))
                
            Max_Profit[i]+=Max_Profit[j]

            if(Max_Profit[j]):
                j=j-Max_Profit[j]

            else:

                j=j-1

            x=1

            

        if(x):

            Max_Profit[i]+=1

        else:

            Max_Profit[i]=1
    

    #PRINT THE ENTIRE DP TABLE

    print(Max_Profit)

arr=[100,80,60,70,60,75,85]
Online_Stock_Problem(arr)    

            
