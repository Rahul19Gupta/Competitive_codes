import sys

class Solution:
        
    def coinChange(self, coins: List[int], amount: int) -> int:
        
        coins.sort()

        #BOTTOM UP DYNAMIC PTOGRAMING APPROACH
        DP=[0 for i in range(0,amount+1)]

        #BASE CASE:
        DP[0]=0


        #RECURSIVE CASE:
        for i in range(1,amount+1):

            DP[i]=sys.maxsize

            for k in range(0,len(coins)):

                if(i>=coins[k]):

                    DP[i]=min(DP[i],DP[i-coins[k]]+1)

                else:

                    break

        #PRINT THE ENTIRE DP TABLE
        print(DP)
        
        if(DP[-1]>amount):
            
            return(-1)
        
        return(DP[-1])

        
        
    
        
