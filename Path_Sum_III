class Node:
    def __init__(self,data):
        self.data=data
        self.left=None
        self.right=None
        
def Path_sum_of_binary_tree(root):

    #MODIFIED VERSION OF THE POST ORDER TRAVERSAL
    if(not root):
        return(0)

    if(not root.left and not root.right):
        return(root.data)

    #RECURSION LOGIC
    x=Path_sum_of_binary_tree(root.left)
    y=Path_sum_of_binary_tree(root.right)

    if(x==Sum):
        count+=1

    if(y==Sum):
        count+=1

    if(x+y==Sum):
        count+=1

    return(x+y)
    

node1=Node(10)
node2=Node(5)
node3=Node(-3)
node4=Node(3)
node5=Node(2)
node6=Node(11)
node7=Node(3)
node8=Node(-2)
node9=Node(1)

#CONNECTIONS
node1.left=node2
node1.right=node3
node2.left=node4
node2.right=node5





    

    
