def isSubsequence(s1: str, s2: str) -> bool:
    len1=len(s1)
    len2=len(s2)
    #BASE CASE:
    if(not len1 and not len2):
        return(True)
        
    elif(len2<len1):
        return(False)
              
    #BOTTOM UP DYNAMIC PROGRAMMING APPROACH
    LCS=[[0 for j in range(0,len2+1)]for i in range(0,len1+1)]
    Max_length=-10
    #RECURSIVE CASE
    for i in range(1,len1+1):
            
        for j in range(1,len2+1):
                
            if(s1[i-1]==s2[j-1]):
                    
                LCS[i][j]=LCS[i-1][j-1]+1
                    
            else:
                    
                LCS[i][j]=max(LCS[i-1][j],LCS[i][j-1])
                    
            if(Max_length<LCS[i][j]):
                Max_length=LCS[i][j]

    print(Max_length)
                    
    if(Max_length==len1):
        return(True)
        
    return(False)


s1="abc"
s2="ahbgdc"
isSubsequence(s1,s2)
