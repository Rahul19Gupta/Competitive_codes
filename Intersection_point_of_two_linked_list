class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
        
def length_of_the_linked_list(temp):
    length=0
    while(temp):
        length+=1
        temp=temp.next

    return(length)
def Intersection_point_of_two_linked_list(head1,head2):
    #TIME COMPLEXITY: O(N)
    #SPACE COMPLEXITY: O(1)
    m=length_of_the_linked_list(head1)

    n=length_of_the_linked_list(head2)

    if(m>n):
        diff=m-n

    

    if(diff>0):
        temp1=head1
        temp2=head2
        while(diff):
            temp1=temp1.next
            diff-=1
    elif(diff<0):
        temp1=head2
        temp2=head2
        while(diff):
            temp1=temp1.next
            diff-=1
        
    
        #NOW ADVANCE BOTH POINTER BY ONE DEFINETLY AT ON EPOINT THEY ARE GOING TO MEET
    while(temp1 and temp2):

        if(temp1==temp2):
            print("The merging point of the two list is {}".format(temp1.data))
            break

        temp1=temp1.next
        temp2=temp2.next

    
                
node1=Node(10)
node2=Node(20)
node3=Node(30)
node4=Node(40)
node5=Node(50)
node6=Node(60)
node7=Node(70)


node1.next=node2
node2.next=node3
node3.next=node4
node4.next=node5
node5.next=node6
node7.next=node4

head1=node1
head2=node7
Intersection_point_of_two_linked_list(head1,head2)
