class Node:

    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None


def alternating_nodes(node1,node2, level):
    if (not node1 or not node2):
        return



    alternating_nodes(node1.left,node2.right, level + 1)

    alternating_nodes(node1.right,node2.left ,level + 1)
    if (level % 2 == 0):
        node1.left, node2.right = node2.right, node1.left


def Pre_Traversal(root):
    if (not root):
        return

    print(root.data)

    Pre_Traversal(root.left)

    Pre_Traversal(root.right)


Node1 = Node(1)
Node2 = Node(2)
Node3 = Node(3)
Node4 = Node(4)
Node5 = Node(5)
Node6 = Node(6)
Node7 = Node(7)

Node1.left = Node2
Node1.right = Node3
Node2.left = Node4
Node2.right = Node5
Node3.left = Node6
Node3.right = Node7

alternating_nodes(Node1.left,Node1.right, 0)

Pre_Traversal(Node1)
