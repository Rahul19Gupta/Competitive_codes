output=[]
def Genearte_valid_parenthesis(n,open_brackets,close_brackets,ans):
    global output
    output.append(ans)

    
    #BASE CASE
    if(len(output)==2*n):
        print("".join(output),end=" ")
        output.pop()
        return

    if(open_brackets>close_brackets):
        return

    #RECURSIVE CASE
    #CASE1:
    if(open_brackets<close_brackets and open_brackets>0 and close_brackets>0):

        Genearte_valid_parenthesis(n,open_brackets-1,close_brackets,'(') or Genearte_valid_parenthesis(n,open_brackets,close_brackets-1,')')

    #CASE2:
    elif(open_brackets==close_brackets and open_brackets>0 and close_brackets>0):

        Genearte_valid_parenthesis(n,open_brackets-1,close_brackets,'(')
       

    #CASE3:
    elif(open_brackets==0 and close_brackets>=0):

        Genearte_valid_parenthesis(n,open_brackets,close_brackets-1,')')

    output.pop()

        
n=3
open_brackets=n
close_brackets=n
Genearte_valid_parenthesis(n,open_brackets-1,close_brackets,'(')
