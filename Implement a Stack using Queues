#IMPLEMENT A STACK USING QUEUES

class Queue:

    def __init__(self):
        self.queue=[]

    def enqueue(self,data):
        self.queue.insert(0,data)

    def dequeue(self):
        if(len(self.queue)):
            return(self.queue.pop())


    def isEmpty(self):
        return(len(self.queue)==0)

    
    
class Stack(Queue):

    #INITIALZE TWO QUEUES
    def __init__(self):
        self.q1=Queue()
        self.q2=Queue()
        

    def push(self,data):

        if(self.q1.isEmpty()):
            self.q1.enqueue(data)

            while(not self.q2.isEmpty()):
                data=self.q2.dequeue()
                self.q1.enqueue(data)

            

        else:

            self.q2.enqueue(data)
            while(not self.q1.isEmpty()):
                data=self.q1.dequeue()
                self.q2.enqueue(data)

    def pop(self):

        #FIRST MOVE ALL THE ELEMENTS FROM FILLED QUEUE TO EMPTY QUEUE
        if(not self.q1.isEmpty()):
            return(self.q1.dequeue())

        else:

            return(self.q2.dequeue())


s=Stack()
s.push(1)
s.push(2)
s.push(3)


print(s.pop())
s.push(5)
s.push(6)
print(s.pop())
print(s.pop())
        
    

    
    
    
