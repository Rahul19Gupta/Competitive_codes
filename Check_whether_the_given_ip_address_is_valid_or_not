class Solution:
    def validIPAddress(self, IP: str):
        
        #CHECK FOR IPV4 ADDRESS
        if(':' not in IP):
            x=IP.split('.')
            if(len(x)>4 or len(x)<4):
                return('Neither')
            for part in x:
                
                if(not self.isvalidipv4(part)):
                    return('Neither')
                
            return('IPv4')
        
        #CHECK FOR IPV6 ADDRESS
        else:
            y=IP.split(':')
            if(len(y)!=8):
                return('Neither')
            
            for part in y:
                
                if(not self.isvalidipv6(part)):
                    return('Neither')
                
            return('IPv6')
                    
    def isvalidipv4(self,s):
        
        if(len(s)==0):
            return(False)
        
        #IF STRING STARTS WITH 0 AND LENGTH OF THE STRING >1
        if(s[0]=='0' and len(s)>1):
            return(False)
        
        for c in s:
            
            if(not (c>='0' and c<='9')):
                return(False)
        
        #IF STRING LENGTH IS MORE THAN 3 
        if(len(s)>3):
            return(False)
        
        try:
            val=int(s)
            
        except ValueError:
            return(False)
        
        return( val>=0 and val<=255)
    
    
    def isvalidipv6(self,s):
        
        if(len(s)>4 or len(s)==0):
            return(False)
        
        for c in s:
            
            if(not( (c >= '0' and c<='9') or (c>='A' and c<='F') or (c>='a' and c<='f'))):
                return(False)
            
        return(True)
        
        
        
