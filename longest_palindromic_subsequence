#TIME COMPLEXITY: O(N^2)
#SPACE COMPLEXITY: O(1)
Max_range=-1000
def Longest_pallindromic_subsequence(s):
    #import pdb;pdb.set_trace()
    global Max_range
    #FOR EVEN LENGTH SUBSTRING
    for i in range(1,len(s)):
        low=i-1
        high=i
        while(low>=0 and high<len(s)and s[low]==s[high]):
            Range=high-low+1
            if(Max_range<Range):
                Max_range=Range
            low-=1
            high+=1

        #FOR ODD LENGTH SUBSTRING
        low=i-1
        high=i+1
        while(low>=0 and high<len(s) and s[low]==s[high]):
            Range=high-low+1
            if(Max_range<Range):
                Max_Range=Range
            low-=1
            high+=1

    print(Max_Range)

s="eMadaMz"
Longest_pallindromic_subsequence(s)
        


    

    

            

            

            
            

    
